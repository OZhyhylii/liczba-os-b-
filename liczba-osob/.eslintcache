[{"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app\\index.js":"2","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app\\app.js":"3","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-header\\app-header.js":"4","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\post-list\\index.js":"5","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-footer\\index.js":"6","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\post-list\\post-list.js":"7","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-footer\\app-footer.js":"8"},{"size":234,"mtime":1611160240494,"results":"9","hashOfConfig":"10"},{"size":43,"mtime":1611160240485,"results":"11","hashOfConfig":"10"},{"size":2048,"mtime":1611679332059,"results":"12","hashOfConfig":"10"},{"size":15029,"mtime":1611676264981,"results":"13","hashOfConfig":"10"},{"size":60,"mtime":1611160240488,"results":"14","hashOfConfig":"10"},{"size":61,"mtime":1611160240482,"results":"15","hashOfConfig":"10"},{"size":1838,"mtime":1611682171427,"results":"16","hashOfConfig":"10"},{"size":6635,"mtime":1611676264959,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1fe8pct",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\index.js",[],["38","39"],"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app\\app.js",["40"],"import React, {Component} from 'react'\nimport AppHeader from \"../app-header/app-header\";\nimport PostList from \"../post-list\";\nimport AppFooter from \"../app-footer\";\n\n\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\nconst AppBlock = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n`\nconst Block = styled.div `\nheight: 85vh;\n`\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [],\n            lineNum: 101,\n            bus : {\n                \"555-1423432\" :[\"first\", \"second\", \"third\", \"fourth\", \"fifth\"]\n            },\n            maxSeats: 39,\n        }\n    }\n\n    async componentDidMount() {\n        try{\n            const response = await axios.get('https://arduino-2fa8c-default-rtdb.europe-west1.firebasedatabase.app/.json')\n            const data = []\n                data.push({\n                    people:response.data[\"People\"],\n                    date: response.data[\"Time\"]\n                })\n            this.setState({\n                data\n            })\n            console.log(data)\n        }catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    isEmpty = (obj) => {\n        for(let key in obj)\n        {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const {data, bus, lineNum, maxSeats} = this.state\n\n        const elements = data.map( (item) => {\n                if ( typeof item === 'object' && this.isEmpty(item) ) {\n                    return item;\n                }\n            }\n        )\n        console.log(elements)\n        return (\n            <>\n                <Block>\n                    <AppHeader/>\n                    <AppBlock>\n                        <PostList\n                            peopleInfo={elements}\n                            bus={bus}\n                            line={lineNum}\n                            max={maxSeats}/>\n                    </AppBlock>\n                </Block>\n                <AppFooter/>\n            </>\n        );\n    }\n}","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-header\\app-header.js",[],"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\post-list\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-footer\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\post-list\\post-list.js",["41"],"\nimport React from 'react';\n\nimport './post-list.css'\nimport styled from \"styled-components\";\n\n\nconst TitleBus = styled.div `\n\n  margin-top: 110px;\n  margin-left: 20px;\n  margin-bottom: 15px;\n\n\n  h1 {\n    color: #000000;\n    font-family: Roboto, sans-serif;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 21px;\n    transition: 0.5s;\n\n    :hover {\n      color: darkcyan;\n    }\n`\n\nconst Item = styled.div`\n  color: #000000;\n  font-size: 18px;\n  font-weight: 500;\n  font-family: Roboto, sans-serif;\n  text-align: center;\n\n`\n\nconst PostList = ({peopleInfo, bus, line, max}) => {\n    const elements = peopleInfo.map( (item) => {\n        if ( typeof item === 'object' && isEmpty(item) ){\n            const {people, date} = item;\n            const buses = Object.keys(bus),\n                busNumber = 0, // choose bus\n                busStation = bus[buses[busNumber]]\n            return (\n                <div key={date}>\n                    <TitleBus color=\"secondary title\"><h1>Autobus: {buses[busNumber]}</h1></TitleBus>\n                    <div  className='list'>\n                        <Item>Czas:<br/>{`${date}`}</Item>\n                        <Item>Linia:<br/>{line}</Item>\n                        <Item>Przystanek Poprzedni:<br/>{busStation[(peopleInfo.length%busStation.length)-1]}</Item>\n                        <Item>Przystanek Końcowy:<br/>{busStation[busStation.length-1]}</Item>\n                        <Item>Zajęte miejsca:<br/>{people}/{max}</Item>\n                    </div>\n                </div>\n            )\n        }\n    })\n    function isEmpty(obj) {\n        for(let key in obj)\n        {\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <div className=\"app-list list-group\">\n            {elements[elements.length-1]}\n        </div>\n    )\n}\n\nexport default PostList;","C:\\Users\\alexa\\Documents\\GitHub repositories\\liczba osób\\liczba-osob\\src\\components\\app-footer\\app-footer.js",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":61,"column":43,"nodeType":"50","messageId":"51","endLine":61,"endColumn":45},{"ruleId":"48","severity":1,"message":"49","line":38,"column":45,"nodeType":"50","messageId":"51","endLine":38,"endColumn":47},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["54"],["55"],"no-global-assign","no-unsafe-negation"]